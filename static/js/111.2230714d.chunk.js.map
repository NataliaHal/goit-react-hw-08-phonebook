{"version":3,"file":"static/js/111.2230714d.chunk.js","mappings":"iRAMaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjBC,GAA0CC,EAAAA,EAAAA,MAAlCC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAiBhC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTC,eAAgB,SAChBC,GAAI,GACJC,GAAI,OACJC,GAAI,OACJC,OAAQ,EACRC,aAAc,EACdC,EAAG,EACHC,SAAU,KACVC,UAEFZ,EAAAA,EAAAA,KAAA,QAAMa,SAAUf,GA7BH,SAAHgB,GAA6B,IAAvBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SACzBvB,GACEwB,EAAAA,EAAAA,IAAM,CACJF,MAAOA,EACPC,SAAUA,KAGXE,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAAA,QAAc,aAADC,OAAcF,EAASG,KAAKC,KAAI,MAC7CzB,GACF,IACC0B,OAAM,kBAAMJ,EAAAA,GAAAA,MAAY,gBAAgB,GAC7C,IAgB4CK,aAAa,MAAKd,UACxDe,EAAAA,EAAAA,MAAC1B,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTyB,cAAe,SACfC,WAAY,SACZC,IAAK,EACLC,MAAO,KACPnB,SAAA,EAEFZ,EAAAA,EAAAA,KAACgC,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRC,QAAQ,WACRC,UAAQ,EACRC,WAAS,EACTC,KAAK,QACLC,MAAM,QACNC,SAAO,GACH1C,EAAS,YAEfG,EAAAA,EAAAA,KAACgC,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CACRC,QAAQ,WACRC,UAAQ,EACRC,WAAS,EACTC,KAAK,QACLC,MAAM,WACNC,SAAO,GACH1C,EAAS,eAEfG,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,CACLN,QAAQ,YACRO,KAAK,SACLvC,GAAI,CACF6B,MAAO,KACPnB,SACH,iBAOX,EC/Ee,SAAS8B,IACtB,OACEf,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EACEZ,EAAAA,EAAAA,KAAA,SAAAY,SAAO,WACPZ,EAAAA,EAAAA,KAACR,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import { toast } from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/AuthOperations';\nimport { useForm } from 'react-hook-form';\nimport { Box, Button, TextField } from '@mui/material';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, reset } = useForm();\n\n  const onSubmit = ({ email, password }) => {\n    dispatch(\n      logIn({\n        email: email,\n        password: password,\n      })\n    )\n      .unwrap()\n      .then(response => {\n        toast.success(`Wellcome, ${response.user.name}!`);\n        reset();\n      })\n      .catch(() => toast.error('No such user!'));\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 12,\n        ml: 'auto',\n        mr: 'auto',\n        border: 1,\n        borderRadius: 2,\n        p: 2,\n        maxWidth: 300,\n      }}\n    >\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 2,\n            width: 300,\n          }}\n        >\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            size=\"small\"\n            label=\"Email\"\n            focused\n            {...register('email')}\n          />\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            size=\"small\"\n            label=\"Password\"\n            focused\n            {...register('password')}\n          />\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            sx={{\n              width: 250,\n            }}\n          >\n            Log In\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <title>Login</title>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","_useForm","useForm","register","handleSubmit","reset","_jsx","Box","sx","display","justifyContent","mt","ml","mr","border","borderRadius","p","maxWidth","children","onSubmit","_ref","email","password","logIn","unwrap","then","response","toast","concat","user","name","catch","autoComplete","_jsxs","flexDirection","alignItems","gap","width","TextField","_objectSpread","variant","required","fullWidth","size","label","focused","Button","type","Login"],"sourceRoot":""}